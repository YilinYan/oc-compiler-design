// $Id: 40-arraystack.oc,v 1.19 2018-05-16 15:38:03-07 - - $

#include "oclib.h"

#define EMPTY (-1)

struct stack {
   string[] data;
   int size;
   int top;
}

stack new_stack (int size) {
   stack stack = new stack; // Zeros out both fields
   stack->data = new string[size]; // Array of null pointers
   stack->size = size;
   stack->top = EMPTY;
   return stack;
}

void push (stack stack, string str) {
   assert (stack->top < stack->size - 1);
   stack->top = stack->top + 1;
   stack->data[stack->top] = str;
}

string pop (stack stack) {
   string tmp = stack->data[stack->top];
   assert (stack->top != EMPTY);
   stack->top = stack->top - 1;
   return tmp;
}

bool empty (stack stack) {
   return stack->top == EMPTY;
}

int main (int argc, string[] argv) {
   stack stack = new_stack (100);
   int argi = 0;

   while (argi < argc) {
      push (stack, argv[argi]);
      argi = argi + 1;
   }

   while (not empty (stack)) {
      putstr (pop (stack));
      putchar ('\n');
   }
}

